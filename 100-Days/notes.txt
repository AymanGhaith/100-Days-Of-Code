2-26:
    - code formatting, plugin: use Prettier for code formatting. (option + shift + F)
    - go to code -> preferences -> settings -> formatter (select prettier)
    - vscode left bar called activity bar.

2-35:
    white element: element has no content between open and closing tag.

2-37:
    no throttling: in network tap you can check the website for different connection speed.

2-38:
    element id naming: use dash notation --> id="part-one". all-lowercase

2-39:
    css bold: use font-weight: bold;

2-41:
    <pre>...</pre>: preformatted text
    "HTML entities": to print > or < ,   &gt;   (greater than)

2-43:
    text-align: align the content of the element not the element it self, so we can't use it for centering the element.
    centering: you can use the text-align for a parent element in case of an image (wrap the image with a div).
    ** CSS structure: try to make it same as html structure, if there is a style for body, make it in the top of the css file.

3-50:
    Descendants: Children of children
    Ancestor: the root or the higher level
    Sibling: on the same level

3-51
    Inheritance: in CSS only selected properties are inherited (width can't be inherited).
    Cascading: multi css rules applied on the same html element.
    Specificity: the more specific selector's rule win.
    preconnect: link type a hint to browsers that the user is likely to need resources from the target resource's origin, to improve user exp.

3-61
    CSS Selectors:
        - type: element name (h1, p)
        - id: id of element
        - group: use comma ( , ) to apply on more than one selector, type or id or class ( h1, .red, #item1)
        - class: class of element
    CSS Combinator:
        - Descendants: using space, ex (li p) will select all paragraphs with li ancestor ( not mandatory to be the direct parent)
        - Child: using greater than ( > ) char, ex ( h2 > p ) will select all paragraphs which has the parent h2

3-65
    - inline elements special rules for margin and padding top and bottom:
        surrounded element's margin ends on the content of the anchor (inline element)
        if there is padding and the previous block element (p) has no margin, the anchor element will be displayed over the paragraph
        we can solve this by adding margin for the p element which will push the content of the anchor.
        but much better is by using the display property of the anchor to block. or much better inline-block.
    - display: inline-block or block.

3-66
    - margin collapsing: in block elements there is an issue in vertical margin between 2 elements, it will take the bigger one,
        but in case of one of them is inline-block, it will take both margins.

3-68
    - span element: non-semantic inline element.

3-69
    - div element: non-semantic block element.
    - use semantic tags as much as you can.

3-71
    - vertical margins can't be applied on inline (non-replaced) element, so need to be change the display.
    - 2 types of inline elements:
        1- replaced : like "img", the element replaced by an image from another page (link), vertical margin can be applied.
        2- non-replaced: like anchor "a"

4-77
    - link google font before the style file because it is mentioned there.
    - link of shared css before the page css

4-79
    - text-align: aligns the text content or the inner content (in-line content), but for block content use margin.
    - <h1>text</h1>: text inside the h1 is inline-content, but the h1 element is not.

4-80
    - image size: just set the width, the browser will keep the aspect ratio for the height.
    - padding or margin: used padding for header, because if he used the margin it will collapsed (margin collapsing) with the inner H1 element.

4-82
    - main element center: we can't center it by the text-align because the content (main) is not an inline content, it is a block.

4-83
    - lists styles: by default there is margin and left padding.
    - list styles: you can add left border !! but add it to all list items elements and change the color of what you want special extra important.
    - style file organizing: put the element selectors first then put the class selectors.

4-84
    - anchor links: can point not only to html page, it also can linked to files to be downloaded.
    - non-inheritable properties: these in developer tools appears in the inherited section but with some opacity or transparency,
    not with filled colors same as inherited props.

4-85
    - bold, strong and em: em and strong are SEMANTIC tags in order to allow screen reader to read the text, but bold is only a style which will not be read.
    - strong is stronger than em.
    - strong will add the text-weight: bold, automatically.
    - use section semantic tag to add sections inside main tag.

5-90
    - netlify drop: https://app.netlify.com/drop

5-92
    - fav Icon: try to empty cash and hard reload, will get an 404 error for the favicon
    - create favicon: favicon generator, favicon.io or any website,
    - one of the generated icons can be used as bookmark for mobile app.
    - take the one with ico extension.
    <link rel="icon" href="images/favicon.ico" type="image/x-icon">
    - following are provided by the favicon.io website.
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">

5-93
    - it is better to use absolute path in case of deploy to server since the folder you deploy is the root folder. /images/tst.png
    - it is also better for errors if you moved a file from its location.
    - and for navigating to the root index. just put href="/"
    - we can use relative path to point to a parent folder using: href="../"

6-98
    - terminal and shell are different, terminal is the application you runt other apps into it like shell (zsh)
    - zsh : open new window and choose the mood

6-100
    - homebrew: package installer for mac

6-105
    - git branch -m newName: change the name of the branch
    - merging: checkout the destination branch then git merge featureBranch

6-110
    - reset personal access token:
        git credential-osxkeychain erase (MacOS keychain)
        host=github.com
        protocol=https
        double enter
    - git clone link . ----> will add the content of the repo in the current folder.
    - git clone link -------> will create a new folder (repo name) and the content inside it.
    - personal access token will be removed after a while

6-111
    - collaborators: from repo settings, manage access, invite collaborators.
    - private repo: the collaborators can see now the private repo which they invited to work on of the owner.

7-117
    - check MDN documents and website structure.

7-118
    - if you have inline and block elements on the same line, make them both blocks, <div><a></a></div>
    - link of shared css before the page css
    - try to put the body margin to 0.
    - text-shadow: same as box-shadow but for the text.

7-120
    - flex-flow: row no-wrap; flex-direction and flex-wrap

7-124
    - background-size: cover, to cover the entire element
    - background-position: center.

7-129
    - box-sizing: in sizing it is better to include the border and the padding in the width calculations, so box-sizing: border-box.

7-130
    - to move hero image, make the header position absolute (out of the document flow), then it will take its place.
    - don't forget to fix the box sizing prop.
    - try always to add text and box shadow as will as the border radius.

7-132
    - for travel website, highlight section, you can consider the images blocks as un-ordered list <ul>
    - for the ul use an ID to distinguish it, but for LIs use classes.
    - try to put the IDs and Classes during building the html structure, the section has ID, the UL has ID, the li has class.

7-134
    - minimizing the height of 2 images with the same width, the higher image will have the smaller width.
    this is because when you set the same height, the taller one will minimize the width as you minimizing the height,
    so the width will keep shrink more the shortest one.
    - putting the image width 100% inside flex row, will give them the same width. (divided by their number)

7-135
    - object-fit prop: fill is the default.
        fill: image resized to fill the container, aspect ratio will be changed
        contain: aspect ration remains, but image will be resized to fit the container, it will leave empty spaces.
        cover: aspect ratio remains, it will fill the container, but it will be cropped because it is zoomed (bigger than the container).ยก

7-138
    - there is a white space between the 2 sections, it is related to margin collapsing.
    - it happen because of the h2 element margin, it overwrite the parent margin.
    - since the parent (section) has no margin, it collapsed.
    - adding padding to the parent section will solve the issue and will contain every thing inside it.

7-139
    - modern websites background are not solid simple colors, it more vivid
    - linear gradient: will give much better background.
    - it can be added using css functions linear-gradient:

7-142
    - use margin: when the needed is the space between elements.
    - use padding: for space with the border

7-145
    - position: static, is the default, so when needed for nav for example to remove the position, use it to overwrite the behavior.

7-147
    - border radius: images inside radius border (image inside li or a container) exceeds the border (overflow) so it need to be handled.
    - default css values, it is needed when we want to overwrite another behavior, to reset the behavior.
    - overflow: default is visible.
    - overflow: hidden (for the container). to hide the extra part which is outside the radius.

7-150
    - css grid display: built-in display in css.
    - display: grid
    - grid-template-columns: 1fr, 2fr, 100px  --> it will make 3 columns, the last one will be 100 px, the remaining will be divided by 3,
        1 for the first and 2 for the second.
    - gap : 100px (between rows), 200px (between the columns)

7-151
    - li:first-of-type: pseudo selector, which will select the first li element in the unordered list.
    - li:nth-of-type(3): selects the third element of the same type (li)
    - grid-column: 1 / 3; used with the element inside the grid, to take the position of the first 2 columns ( from 1 to 3 since 2 is the line between them)
    - grid-column: 1 / span 3, it tells that the element will take 3 columns starting from the first oen.

7-153
    - UTF-8: you can use all symbols from UTF-8
    - symbols can be used by their number, hexadecimal or html entity
    - entity: &larr;
    - decimal number: &#8592;
    - hexadecimal: &#x2190;
    - read this https://www.w3schools.com/charsets/default.asp
